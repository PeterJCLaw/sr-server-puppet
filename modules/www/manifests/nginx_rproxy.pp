# Configuration to install nginx and get it to reverse-proxy to the local
# apache instance(s). Distributes traffic to the main website, and to the IDE,
# to different apache servers. The reason for this is load balancing; see the
# email 'Server Performance' 18/04/15 on srobo-devel

class www::nginx_rproxy ()
{
  $www_canonical_hostname = hiera('www_canonical_hostname')

  # Install nginx
  package { 'nginx':
    ensure => latest,
  }

  # Logjam workaround: weakdh.org explains how prepackaged DH primes can be
  # subject to feasible attacks through rainbow-table like things. Instead,
  # use a unique DH key. (Generated by jmorse 17/10/15).
  file { '/etc/pki/tls/dhparams.pem':
    owner => root,
    group => root,
    mode => '0444',
    source => 'puppet:///modules/www/dhparams.pem',
  }

  # Install our nginx config file
  file { '/etc/nginx/nginx.conf':
    owner => root,
    group => root,
    mode => '0644',
    content => template('www/nginx.conf.erb'),
    require => [Package[ 'nginx' ], File['/etc/pki/tls/dhparams.pem']],
  }

  # Remash server certificate file into a format that nginx likes
  # In devmode, just don't cat in the bundle file
  if hiera('static_tls_certificate') and !$devmode {
    exec { 'nginx-mangle-cert':
      command => 'cat server.crt comodo_bundle.crt > server-nginx.crt',
      provider => 'shell',
      creates => '/etc/pki/tls/certs/server-nginx.crt',
      cwd => '/etc/pki/tls/certs',
      subscribe => [File['server.crt'], File['cert_chain']],
    }
  } else {
    file { '/etc/pki/tls/certs/server-nginx.crt':
      ensure  => link,
      target  => '/etc/pki/tls/certs/server.crt',
      require => File['server.crt'],
      notify  => Service['nginx'],
    }
  }

  service { 'nginx':
    ensure => running,
    enable => true,
    subscribe => [Package['nginx'], File['/etc/nginx/nginx.conf'],
                  Service['httpd']],
  }
  if hiera('competitor_services') {
    Service['nginx'] ~> Service['httpd-ide']
  }
}
