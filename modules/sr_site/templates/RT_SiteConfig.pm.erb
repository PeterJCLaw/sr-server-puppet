# Any configuration directives you include  here will override 
# RT's default configuration file, RT_Config.pm
#
# To include a directive here, just copy the equivalent statement
# from RT_Config.pm and change the value. We've included a single
# sample value below.
#
# This file is actually a perl module, so you can include valid
# perl code, as well.
#
# The converse is also true, if this file isn't valid perl, you're
# going to run into trouble. To check your SiteConfig file, use
# this command:
#
#   perl -c /etc/rt/RT_SiteConfig.pm
#
# You must restart your webserver after making changes to this file.

Set($WebBaseUrl, "https://<%= @www_canonical_hostname %>");
Set($rtname, 'SR-tracker');
Set($Organization, 'Student-Robotics');
Set($WebDomain, "<%= @www_canonical_hostname %>");
Set($WebPath, '/rt');
Set($WebPort, '443');
Set($Timezone, "Europe/London");

Set($DatabaseType, "mysql");
Set($DatabaseHost,   "<%= @rt_db_host %>");
Set($DatabaseRTHost, "<%= @rt_db_host %>");
Set($DatabaseUser, "<%= @rt_db_user %>");
Set($DatabaseAdmin, "<%= @rt_db_user %>");
Set($DatabasePassword, "<%= @mysql_db_pw %>");
Set($DatabaseName, q{<%= @rt_db_name %>});

Set($OwnerEmail, '<%= @rt_admin_address %>');

Set($CorrespondAddress, '<%= @default_rt_address %>');

# Default; to remind everyone this is being pumped via sendmail
Set($MailCommand, "sendmailpipe");
Set($SendmailPath, "/usr/sbin/sendmail.postfix");
# Possibly set outgoing mail addr
#Set($SetOutgoingMailFrom, 0);
#Set($DefaultMailPrecedence, "bulk");
#Set($DefaultErrorMailPrecedence, "bulk");
#Set($SendmailArguments, "-oi");
#Set($SendmailBounceArguments, '-f "<>"');

# Configure what the canonical redirect URL should be. This is not what apache
# tells RT because we're reverse-proxying it.
Set($CanonicalizeRedirectURLs, "https://<%= @www_canonical_hostname %>");

# Authentication

# Use REMOTE_USER env variable for authentication
Set($WebRemoteUserAuth, 1);
# Check it for every request
Set($WebRemoteUserContinuous, 1);

# LDAP configuration -- group data sync

# Configure where our local plugins are going to go.
Set($LocalPluginPath, '/usr/local/lib/rtplugins');

Plugin('RT::Extension::LDAPImport');

# Host is always local
Set($LDAPHost, 'localhost');

Set($LDAPUser, '<%= @anon_account %>');
Set($LDAPPassword, '<%= @anonpw %>');
Set($LDAPBase, 'o=sr');
# Unclear what varaibles go in this filter...
Set($LDAPFilter, '(&(objectClass=posixAccount)(!(uid=*_*)))');

# Map username to be the uid, emails, and for the real person name to be
# their firstname then surname.
Set($LDAPMapping, {Name         => 'uid',
                   EmailAddress => 'mail',
                   RealName     => ['cn', 'sn']});
# Identify users imported from LDAP with this group
Set($LDAPGroupName, 'LDAPUsers');
# Always overwrite RT data with LDAP data
Set($LDAPUpdateUsers, 1);
# All created users should be privileged; in RT, it appears that this is the
# distinction between system users ("employees" as it were) and requestors.
# People can't be assigned rights otherwise.
Set($LDAPCreatePrivileged, 1);

# Sync groups from LDAP into RT

Set($LDAPGroupBase, 'ou=groups,o=sr');
# Filter for groups. This could match all groups, but it seems unwise to
# duplicate it into RT. So, we'll explicitly match what we want to go into
# RT.
Set($LDAPGroupFilter, '(&(cn=mentors))');
Set($LDAPGroupFilter, '(&(cn=media-consent-admin))');
Set($LDAPGroupMapping, {Name               => 'cn',
                        Member_Attr        => 'memberUid',
                        Member_Attr_Value  => 'uid' });

# You must install Plugins on your own, this is only an example
# of the correct syntax to use when activating them:
#     Plugin( "RT::Extension::SLA" );
#     Plugin( "RT::Authen::ExternalAuth" );

1;
